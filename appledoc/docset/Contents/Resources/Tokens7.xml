<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/TSLAsciiCommandResponderBase.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/TSLAsciiCommandResponderBase</TokenIdentifier>
			<Abstract type="html">A base class that handles the responses from ASCII 2.0 commands</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/setCommandName:</TokenIdentifier>
			<Abstract type="html">The command to respond to - this can be nil</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSString *commandName</Declaration>
			
			
			<Anchor>//api/name/commandName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/commandName</TokenIdentifier>
			<Abstract type="html">The command to respond to - this can be nil</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSString *commandName</Declaration>
			
			
			<Anchor>//api/name/commandName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TSLAsciiCommandResponderBase/commandName</TokenIdentifier>
			<Abstract type="html">The command to respond to - this can be nil</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSString *commandName</Declaration>
			
			
			<Anchor>//api/name/commandName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/setResponseStarted:</TokenIdentifier>
			<Abstract type="html">YES if a &apos;CS:&apos; header beginning with commandName has been seen</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) bool responseStarted</Declaration>
			
			
			<Anchor>//api/name/responseStarted</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/responseStarted</TokenIdentifier>
			<Abstract type="html">YES if a &apos;CS:&apos; header beginning with commandName has been seen</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) bool responseStarted</Declaration>
			
			
			<Anchor>//api/name/responseStarted</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TSLAsciiCommandResponderBase/responseStarted</TokenIdentifier>
			<Abstract type="html">YES if a &apos;CS:&apos; header beginning with commandName has been seen</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) bool responseStarted</Declaration>
			
			
			<Anchor>//api/name/responseStarted</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/initWithCommandName:</TokenIdentifier>
			<Abstract type="html">Initialise with the given command name</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (id)initWithCommandName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The command name e.g. &apos;.iv&apos; for Inventory</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithCommandName:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/processReceivedLine:header:value:moreLinesAvailable:</TokenIdentifier>
			<Abstract type="html">Each correctly terminated line from the device is passed to this method for processing</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (BOOL)processReceivedLine:(NSString *)fullLine header:(NSString *)header value:(NSString *)value moreLinesAvailable:(BOOL)moreAvailable</Declaration>
			<Parameters>
				<Parameter>
					<Name>fullLine</Name>
					<Abstract type="html">The line to be processed</Abstract>
				</Parameter><Parameter>
					<Name>header</Name>
					<Abstract type="html">The response line header excluding the colon e.g. &apos;CS&apos; for a command started response</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">The response line following the colon e.g. &apos;.iv&apos;</Abstract>
				</Parameter><Parameter>
					<Name>moreAvailable</Name>
					<Abstract type="html">When YES indictates there are additional lines to be processed (and will also be passed to this method)</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Derived classes should return YES if this line should not be passed to any other responder.</Abstract></ReturnValue>
			<Anchor>//api/name/processReceivedLine:header:value:moreLinesAvailable:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/responseDidStart</TokenIdentifier>
			<Abstract type="html">Derived classes can override this method to provide custom handling when the command response starts</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (void)responseDidStart</Declaration>
			
			
			<Anchor>//api/name/responseDidStart</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/responseDidFinish</TokenIdentifier>
			<Abstract type="html">Derived classes can override this method to provide custom handling upon completion of a synchronous response</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (void)responseDidFinish</Declaration>
			
			
			<Anchor>//api/name/responseDidFinish</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/responseDidFinishAsync</TokenIdentifier>
			<Abstract type="html">Derived classes can override this method to provide custom handling upon completion of an asynchronous response</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (void)responseDidFinishAsync</Declaration>
			
			
			<Anchor>//api/name/responseDidFinishAsync</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/responseDidReceiveParameter:</TokenIdentifier>
			<Abstract type="html">Derived classes can override this method to provide custom handling for each parameter received</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (BOOL)responseDidReceiveParameter:(NSString *)parameter</Declaration>
			<Parameters>
				<Parameter>
					<Name>parameter</Name>
					<Abstract type="html">A single parameter extracted from the PR: response, excluding the &apos;-&apos; and trimmed of leading and trailing whitespace</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Return YES if the parameter was handled</Abstract></ReturnValue>
			<Anchor>//api/name/responseDidReceiveParameter:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TSLAsciiCommandResponderBase/appendToResponse:</TokenIdentifier>
			<Abstract type="html">Append the given NSString to the current response property</Abstract>
			<DeclaredIn>TSLAsciiCommandResponderBase.h</DeclaredIn>			
			
			<Declaration>- (void)appendToResponse:(NSString *)line</Declaration>
			<Parameters>
				<Parameter>
					<Name>line</Name>
					<Abstract type="html">The line to append to the current response</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/appendToResponse:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
	</File>
</Tokens>